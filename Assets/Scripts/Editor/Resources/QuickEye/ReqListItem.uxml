<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements">
    <ui:VisualElement class="sidebar-req-el">
        <Style src="CodeField-Dark.uss" />
        <ui:Label text="GET" class="sidebar-req-el-type" />
        <ArteHacker.UITKEditorAid.EditableLabel value="Reqest name" class="sidebar-req-el-name" />
    </ui:VisualElement>
    <QuickEye.RequestWatcher.CodeField value="// Get a reference to the field from UXML and assign it its value. var uxmlField = container.Q&lt;MinMaxSlider&gt;(&quot;the-uxml-field&quot;); uxmlField.value = new Vector2(10, 12);  // Create a new field, disable it, and give it a style class. var csharpField = new MinMaxSlider(&quot;C# Field&quot;, 0, 20, -10, 40); csharpField.SetEnabled(false); csharpField.AddToClassList(&quot;some-styled-field&quot;); csharpField.value = uxmlField.value; container.Add(csharpField);  // Mirror value of uxml field into the C# field. uxmlField.RegisterCallback&lt;ChangeEvent&lt;Vector2&gt;&gt;((evt) =&gt; {     csharpField.value = evt.newValue; });" multiline="true">
        <Style src="CodeField-Dark.uss" />
    </QuickEye.RequestWatcher.CodeField>
</ui:UXML>
